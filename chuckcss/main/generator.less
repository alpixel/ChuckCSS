/*
    == GENERATORS ==
*/

/*
** Mixins list **
    ._generateColorsClass
    ._generatePaddingMarginClass
    ._generateColumns
    ._generatePercentWidth
    ._generateFontSize
    ._generateFontWeight
    ._generateTextsAligments
*/

/* *****
    @name : ._generateColorsClass
    @description : Generate colors styles when using "cc-{color}" class on an element
    @params : @aColors : array built in settings.less file
***** */
._generateColorsClass(@iterator:1) when(@iterator <= length(@aColors)) {
    @colorName: extract(extract(@aColors, @iterator),1);
    @colorValue : extract(extract(@aColors, @iterator),2);

    /* titles */
    h1,h2,h3,h4,h5,h6,
    .h1-like,.h2-like,.h3-like,.h4-like,.h5-like,.h6-like {
        &.cc {
            &-@{colorName} {
                color: @colorValue;
            }

            &-bg-@{colorName} {
                color:white;
                background-color:@colorValue;
            }
        }
    }

    /* elements */
    p,div,section,aside,header,footer,article,main,nav,
    td,th,span,i,a,strong,em,code,small {
        &.cc {
            &-@{colorName} {
                color: @colorValue;
            }

            &-bg-@{colorName} {
                color:white;
                background-color:@colorValue;

                a:not(.btn) {
                    color:white;
                }
            }
        }
    }

    /* lists */
    li {
        &.cc {
            &-bg-@{colorName} {
                background-color:@colorValue;
                color:white;
            }
            &-@{colorName}:before {
                color: @colorValue;
            }
        }
    }


    /* blockquotes */
    blockquote.cc-@{colorName} {
        border-left:4px solid @colorValue;

        &.cc {
            &-quoted:before {
                color:@colorValue;
            }
            &-reverse {
                border-left-width:0px;
                border-right-color:@colorValue;
            }
        }
    }

    /* Tables */
    table {
        &.cc-@{colorName} {
            thead,
            tfoot {
                td,th {
                    background-color:@colorValue;
                    color:white;
                    border-bottom-color:darken(@colorValue,20%);
                }
            }

            tbody tr td {
                border-bottom:1px solid @colorValue;
            }

            /* Bordered & Colored tables */
            &.cc-bordered {
                tfoot,
                thead {
                    td,th {
                        border-color:darken(@colorValue,10%);
                    }
                }

                tbody tr td {
                    border-color:darken(@colorValue,10%);
                }
            }
        }


        tr.cc-bg-@{colorName} {
            td {
                background-color:@colorValue;
                color:white;
                border-bottom:0;
            }
        }
    }



    /* Links / Buttons */
    a.btn,
    button {
        &.cc-bg-@{colorName} {
            color:@links-btn-tc;
            ._btn(@colorValue);
            // border-color:@colorValue;

            &:hover {
                color:@links-btn-hover-tc;
                // border-color:@colorValue;
            }

            /* Loading + outlined buttons */
            &.cc-loading {
                &:before {
                    border-color: transparent white white white
                }
            }

            /* Outlined buttons / links */
            &.cc-outlined {
                color:@colorValue;
                ._btn(transparent,transparent);
                border:unit(@links-btn-bw,px) solid @colorValue;

                &:hover {
                    border-color:darken(@colorValue,20%);
                    color:darken(@colorValue,20%);
                }

                /* Loading + outlined buttons */
                &.cc-loading {
                    color:transparent;

                    &:before {
                        border-color: transparent @colorValue @colorValue @colorValue;
                    }
                }
            }
        }
    }


    /* Colored forms */
    form.cc-@{colorName} {

        .form {
            &-checkbox:not(.error) input {
                &:focus {
                    border-color:@input-bc;
                }
                &:checked {
                    background-color:@colorValue;
                    border-color:@colorValue;
                }
            }

            &-radio:not(.error) input {
                &:focus {
                    border-color:@input-bc;
                }
                &:checked {
                    &:before {
                        background-color:@colorValue;
                    }
                }
            }


            &-ps {
                span {
                    background-color:@colorValue;
                }
            }
        }


        select,
        textarea,
        input {
            &:focus {
                border-color:@colorValue;
            }
        }

        input[type="submit"],
        button[type="submit"] {
            ._btn(@colorValue);
        }
    }

    /* Tabs */
    .tabs.cc-@{colorName} {
        &.cc {
            &-bordered {
                &>li {
                    &:hover,
                    &.active {
                        a:not(.btn) {
                            border-color: @colorValue @colorValue white @colorValue;
                        }
                    }
                }
            }
            &-pills {
                &>li {
                    &.active,
                    &:hover {
                        a:not(.btn) {
                            background-color:@colorValue;
                            border-top:1px solid @colorValue;
                            border-bottom:1px solid @colorValue;
                            color:white;
                        }
                    }
                }
            }
        }


        &>li {
            /* Active child */
            &:hover,
            &.active {
                a:not(.btn) {
                    color:@colorValue;
                    border-bottom-color:@colorValue;
                }
            }
        }


        /* Small screen ruleset */
        ._media-s({
            &.cc {
                &-bordered {
                    &>li {
                        &:hover,
                        &.active {
                            a:not(.btn) {
                                border-color:@colorValue;
                            }
                        }
                    }
                }

                &-pills {
                    &.cc-unchained > li,
                    &>li {
                        &.active,
                        &:hover {
                            a:not(.btn) {
                                border:1px solid @colorValue;
                            }
                        }
                    }
                }
            }

        });
    }

    ._generateColorsClass((@iterator + 1));
}
._generateColorsClass; // Launch _generateColorsClass



/* *****
    @name : ._generatePaddingMarginClass
    @description : Generate padding & margin "cc-pa-{number}" or/and "cc-ma-{number}" class on an element
***** */
._generatePaddingMarginClass(@breakpoint:~'',@iterator:0) when(@iterator <= 100) {

    .cc {
        &-pa@{breakpoint} {
            padding:@helper-pa;
        }
        &-pat@{breakpoint} {
            padding-top:@helper-pat;
        }
        &-par@{breakpoint} {
            padding-right:@helper-par;
        }
        &-pab@{breakpoint} {
            padding-bottom:@helper-pab;
        }
        &-pal@{breakpoint} {
            padding-left:@helper-pal;
        }
        &-pa-@{iterator}@{breakpoint} {
            padding:unit(@iterator,px);
        }
        &-pat-@{iterator}@{breakpoint} {
            padding-top:unit(@iterator,px);
        }
        &-par-@{iterator}@{breakpoint} {
            padding-right:unit(@iterator,px);
        }
        &-pab-@{iterator}@{breakpoint} {
            padding-bottom:unit(@iterator,px);
        }
        &-pal-@{iterator}@{breakpoint} {
            padding-left:unit(@iterator,px);
        }
        &-ma@{breakpoint} {
            margin:@helper-ma;
        }
        &-mat@{breakpoint} {
            margin-top:@helper-mat;
        }
        &-mar@{breakpoint} {
            margin-right:@helper-mar;
        }
        &-mab@{breakpoint} {
            margin-bottom:@helper-mab;
        }
        &-mal@{breakpoint} {
            margin-left:@helper-mal;
        }
        &-ma-@{iterator}@{breakpoint} {
            margin:unit(@iterator,px);
        }
        &-mat-@{iterator}@{breakpoint} {
            margin-top:unit(@iterator,px);
        }
        &-mar-@{iterator}@{breakpoint} {
            margin-right:unit(@iterator,px);
        }
        &-mab-@{iterator}@{breakpoint} {
            margin-bottom:unit(@iterator,px);
        }
        &-mal-@{iterator}@{breakpoint} {
            margin-left:unit(@iterator,px);
        }
    }

    ._generatePaddingMarginClass(@breakpoint, (@iterator + 5));
}
._generatePaddingMarginClass; // Launch _generatePaddingMarginClass
._media-xs-up({._generatePaddingMarginClass(-s);});
._media-s-up({._generatePaddingMarginClass(-m);});
._media-m-up({._generatePaddingMarginClass(-l);});
._media-l-up({._generatePaddingMarginClass(-xl);});


/* *****
    @name : ._generateColumns
    @description : Generate columns width in flexbox parent
***** */
._generateColumns(@breakpoint:~'',@iterator:0) when(@iterator <= @cols-total) {

    .columns > .cc-@{iterator}@{breakpoint} {
        flex:0 0 auto;
        width: ~'calc(100% * @{iterator} / @{cols-total} - @{cols-gutter}  - 0.05px)'; // Substract 0.05px for IE compatibilities
        max-width: ~'calc(100% * @{iterator} / @{cols-total} - @{cols-gutter}  - 0.05px)'; // Substract 0.05px for IE compatibilities
    }

    /* Offsets calculations with gutters */
    .columns > .cc-offset-@{iterator}@{breakpoint} {
        margin-left: ~'calc(100% * @{iterator} / @{cols-total} + @{cols-gutter}/2  - 0.05px)'; // Substract 0.05px for IE compatibilities
    }

    ._generateColumns(@breakpoint,(@iterator + 1));
}



/* *****
    @name : ._generatePercentWidth
    @description : Generate width for block helpers in %
***** */
._generatePercentWidth(@breakpoint:~'',@iterator:0) when(@iterator <= 100) {
    .cc {
        &-w-@{iterator}@{breakpoint} {
            width:unit(@iterator,%);
        }
    }

    ._generatePercentWidth(@breakpoint,@iterator + 1);
}
._generatePercentWidth; // Launch _generatePercentWidth
._media-xs-up({._generatePercentWidth(-s);});
._media-s-up({._generatePercentWidth(-m);});
._media-m-up({._generatePercentWidth(-l);});
._media-l-up({._generatePercentWidth(-xl);});


/* *****
    @name : ._generateFontSize
    @description : Generate font-size from 0rem to 10rem;
***** */
._generateFontSize(@breakpoint:~'',@iterator:0) when(@iterator <= 100) {
    .cc {
        &-fs-@{iterator}@{breakpoint} {
            font-size:unit(@iterator,rem) / 10;
        }
    }

    ._generateFontSize(@breakpoint,@iterator + 1);
}
._generateFontSize; // Launch _generateFontSize
._media-xs-up({._generateFontSize(-s);});
._media-s-up({._generateFontSize(-m);});
._media-m-up({._generateFontSize(-l);});
._media-l-up({._generateFontSize(-xl);});



/* *****
    @name : ._generateFontWeight
    @description : Generate font-weight from 100 to 900
***** */
._generateFontWeight(@breakpoint:~'',@iterator:100) when(@iterator <= 900) {
    .cc {
        &-fw-@{iterator}@{breakpoint} {
            font-weight:@iterator;
        }
    }

    ._generateFontWeight(@breakpoint,@iterator + 100);
}
._generateFontWeight; // Launch _generateFontWeight
._media-xs-up({._generateFontWeight(-s);});
._media-s-up({._generateFontWeight(-m);});
._media-m-up({._generateFontWeight(-l);});
._media-l-up({._generateFontWeight(-xl);});



/* *****
    @name : ._generateTextsAligments
    @description : Generate texts aligments
***** */
._generateTextsAligments(@breakpoint:~'') {
    .cc {
        &-txt-center@{breakpoint} {
            text-align: center;
        }
        &-txt-left@{breakpoint} {
            text-align: left;
        }
        &-txt-right@{breakpoint} {
            text-align: right;
        }
        &-txt-justify@{breakpoint} {
            text-align: justify;
        }
    }
}
._generateTextsAligments; // Launch _generateFontWeight
._media-xs-up({._generateTextsAligments(-s);});
._media-s-up({._generateTextsAligments(-m);});
._media-m-up({._generateTextsAligments(-l);});
._media-l-up({._generateTextsAligments(-xl);});